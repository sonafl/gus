# определяем абстрактный класс - общий шаблон для создания других классов 
class Figure:
    # создание абстрактных методов - метод, который объявлен в этом классе, но реализацию будет иметь в другом 
    def get_area(self):
        # создаем исключение в случае, если метод в дочернем классе не переопределен
        raise NotImplementedError('Метод get_area должен быть переопределен в каждом дочернем классе')
    
    def get_perimeter(self):
        raise NotImplementedError('Метод get_perimeter должен быть переопределен в каждом дочернем классе')